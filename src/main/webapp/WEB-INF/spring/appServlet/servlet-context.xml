<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<context:annotation-config/>
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.hcl.hawkeye" />
	
	<!-- <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url" value="jdbc:postgresql://192.168.99.100:5432/postgres" />
		<beans:property name="url" value="jdbc:mysql://labs.hclets.com:33306/HawkEye_Schema" />
		<beans:property name="url" value="jdbc:mysql://labs.hclets.com:33306/HawkEye_Schema" /> 
		<beans:property name="url" value="jdbc:mysql://10.137.251.91:33306/HawkEye_Schema" />
	        <beans:property name="url" value="jdbc:mysql://localhost:3306/HawkEye_Schema" /> 
		<beans:property name="username" value="root" />
		<beans:property name="password" value="Hcl123$" />
	</beans:bean> -->
	
	<beans:bean id="dataSourceNew" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<!-- <beans:property name="url" value="jdbc:mysql://labs.hclets.com:33306/HawkEye_Schema" />  -->
		 <beans:property name="url" value="jdbc:mysql://localhost:3306/HawkEye_Schema" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="Hcl123$" />
		<beans:property name="initialSize" value="5" />
	</beans:bean>
	
	<beans:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">  
		<beans:property name="dataSource" ref="dataSourceNew"/> 
	</beans:bean>  
	
	<beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basename">
			<beans:value>messages</beans:value>
		</beans:property>
	</beans:bean>
	
	<!-- Batch Job configuration starts here for Jira integration -->
	<beans:bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager"/>
	
	<beans:import resource="job-config.xml"/>
	
	<beans:bean id = "jobRepository" class = "org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<!-- <beans:property name="dataSource" ref="dataSourceNew"/> -->
		<beans:property name="transactionManager" ref="transactionManager"/>
		<!-- <beans:property name="databaseType" value="mysql"></beans:property> -->
	</beans:bean>
	
	<beans:bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<beans:property name="jobRepository" ref="jobRepository"></beans:property>
	</beans:bean>
	
	 <beans:bean id="runScheduler" class="com.hcl.hawkeye.batch.jira.service.impl.JiraBatchJobServiceImpl" />
	 <beans:bean id="runQualityScheduler" class="com.hcl.hawkeye.batch.codequality.service.impl.CodeQualityBatchJobServiceImpl" />
	<beans:bean id="gitJobrunScheduler" class="com.hcl.hawkeye.batch.coderepo.service.impl.GitBatchJobServiceImpl" />
	<task:scheduled-tasks>

		<task:scheduled ref="runScheduler" method="runJobScheduler" cron="0 0 */3 ? * *"/>
		<!-- "0 0 12 1/1 * ?" -->		
   </task:scheduled-tasks>
   
       <task:scheduled-tasks>
              <task:scheduled ref="runQualityScheduler" method="runJobScheduler" cron="0 0 * ? * *"/>
   </task:scheduled-tasks>

    
	
</beans:beans>
